{"mappings":"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","sources":["<anon>","src/scripts/main.js","src/modules/functions.js","src/modules/Game.class.js"],"sourcesContent":["var $a5fd07fa01589658$exports = {};\n\n\"use strict\";\nclass $a5fd07fa01589658$var$Game {\n    constructor(initialState){\n        this.board = initialState || [\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ]\n        ];\n        this.score = 0;\n        this.status = \"idle\";\n    }\n    moveLeft() {\n        for(let i = 0; i < this.board.length; i++){\n            const container = [];\n            // Збираємо всі ненульові елементи в контейнер\n            for(let j = 0; j < this.board[i].length; j++)if (this.board[i][j] !== 0) container.push(this.board[i][j]);\n            // Об'єднуємо однакові елементи\n            for(let k = container.length - 1; k > 0; k--)if (container[k] === container[k - 1]) {\n                container[k] *= 2; // Об'єднуємо елементи\n                container[k - 1] = 0; // Обнуляємо елемент, що об'єднався\n            }\n            // Забираємо нулі з сонтейнера\n            const filteredContainer = container.filter((item)=>item !== 0);\n            while(filteredContainer.length < this.board[i].length)filteredContainer.push(0); // Додаємо нулі зліва\n            this.board[i] = filteredContainer; // Записуємо результат в масив\n        }\n        this.board = $a5fd07fa01589658$var$addNumberToBoard(this.board);\n        this.updateBoard();\n    }\n    moveRight() {\n        for(let i = 0; i < this.board.length; i++){\n            const container = [];\n            // Збираємо всі ненульові елементи в контейнер\n            for(let j = 0; j < this.board[i].length; j++)if (this.board[i][j] !== 0) container.push(this.board[i][j]);\n            // Об'єднуємо однакові елементи\n            for(let k = 0; k < container.length - 1; k++)if (container[k] === container[k + 1]) {\n                container[k + 1] *= 2; // Об'єднуємо елементи\n                container[k] = 0; // Обнуляємо елемент, що об'єднався\n                k++;\n            }\n            // Забираємо нулі з сонтейнера\n            const filteredContainer = container.filter((item)=>item !== 0);\n            while(filteredContainer.length < this.board[i].length)filteredContainer.unshift(0); // Додаємо нулі зліва\n            this.board[i] = filteredContainer; // Записуємо результат в масив\n        }\n        this.board = $a5fd07fa01589658$var$addNumberToBoard(this.board);\n        this.updateBoard();\n    }\n    moveUp() {\n        for(let i = 0; i < this.board[0].length; i++){\n            const container = [];\n            // Зберігаємо всі елементи поточного стовпця, ігноруючи нулі\n            for(let j = 0; j < this.board.length; j++)if (this.board[j][i] !== 0) container.push(this.board[j][i]);\n            // Виконати злиття елементів у стовпці\n            for(let k = 0; k < container.length - 1; k++)if (container[k] === container[k + 1]) {\n                container[k] *= 2;\n                container[k + 1] = 0;\n                k++;\n            }\n            // Фільтруємо масив від нулів і додаємо їх в кінець\n            const filteredContainer = container.filter((item)=>item !== 0);\n            // Додаємо нулі в кінець контейнера, якщо їх не вистачає\n            while(filteredContainer.length < this.board.length)filteredContainer.push(0);\n            // Записуємо результат в кожен стовпець масиву result\n            for(let k = 0; k < filteredContainer.length; k++)this.board[k][i] = filteredContainer[k];\n        }\n        this.board = $a5fd07fa01589658$var$addNumberToBoard(this.board);\n        this.updateBoard();\n    }\n    moveDown() {\n        for(let i = 0; i < this.board[0].length; i++){\n            const container = [];\n            // Зберігаємо всі елементи поточного стовпця, ігноруючи нулі\n            for(let j = 0; j < this.board.length; j++)if (this.board[j][i] !== 0) container.push(this.board[j][i]);\n            // Виконати злиття елементів у стовпці\n            for(let k = 0; k < container.length - 1; k++)if (container[k] === container[k + 1]) {\n                container[k] *= 2;\n                container[k + 1] = 0;\n                k++;\n            }\n            // Фільтруємо масив від нулів і додаємо їх в кінець\n            const filteredContainer = container.filter((item)=>item !== 0);\n            // Додаємо нулі в кінець контейнера, якщо їх не вистачає\n            while(filteredContainer.length < this.board.length)filteredContainer.unshift(0);\n            // Записуємо результат в кожен стовпець масиву result\n            for(let k = 0; k < filteredContainer.length; k++)this.board[k][i] = filteredContainer[k];\n        }\n        this.board = $a5fd07fa01589658$var$addNumberToBoard(this.board);\n        this.updateBoard();\n    }\n    getScore() {\n        const countScrore = (arr)=>{\n            return arr.reduce((sum, item)=>{\n                return sum + item.reduce((acc, current)=>acc + current, 0);\n            }, 0);\n        };\n        this.score = countScrore(this.board);\n        $a5fd07fa01589658$var$updateScore(this.score);\n    }\n    getState() {\n        if (this.status !== \"playing\") $a5fd07fa01589658$var$removeArrowKeyListener($62f2652d1335534a$export$3b6871b1da9207c5);\n        if (this.start === \"playing\") $a5fd07fa01589658$var$addArrowKeyListener($62f2652d1335534a$export$3b6871b1da9207c5);\n    }\n    start() {\n        this.status = \"playing\";\n        this.board = $a5fd07fa01589658$var$addNumberToBoard(this.board);\n        $a5fd07fa01589658$var$addArrowKeyListener($62f2652d1335534a$export$3b6871b1da9207c5);\n        $a5fd07fa01589658$var$makeButtonChange(this.status);\n        this.updateBoard();\n    }\n    restart() {\n        this.board = [\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ]\n        ];\n        this.score = 0;\n        this.status = \"idle\";\n        $a5fd07fa01589658$var$makeButtonChange(this.status);\n        this.updateBoard();\n    }\n    updateBoard() {\n        // Отримуємо всі клітинки\n        const cells = [\n            ...document.querySelectorAll(\".field-cell\")\n        ];\n        const cellsArr = $a5fd07fa01589658$var$sliceArr(cells);\n        // Заповнюємо клітинки данними з дошки\n        for(let i = 0; i < this.board.length; i++)for(let j = 0; j < this.board[i].length; j++){\n            if (this.board[i][j] !== 0) cellsArr[i][j].innerText = this.board[i][j];\n            else cellsArr[i][j].innerText = \"\";\n            cellsArr[i][j].style.backgroundColor = $a5fd07fa01589658$var$getColor(this.board[i][j]);\n        }\n        this.getScore();\n        this.status = $a5fd07fa01589658$var$checkWinOrLose(this.board, this.status);\n        $a5fd07fa01589658$var$changeMessage(this.status);\n        this.getState();\n    }\n}\n// Функція перетворення одновимірного масиву на масив 4х4\nfunction $a5fd07fa01589658$var$sliceArr(arr) {\n    const contaienr = [];\n    for(let i = 0; i < arr.length; i = i + 4)contaienr.push(arr.slice(i, i + 4));\n    return contaienr;\n}\n// Функція яка генерує рандомне число 2 або 4\nfunction $a5fd07fa01589658$var$createNumberTwoOrFour(arr) {\n    const numbers = [\n        2,\n        2,\n        2,\n        2,\n        2,\n        4,\n        2,\n        2,\n        2,\n        2\n    ];\n    const randomNumber = Math.floor(Math.random() * 10);\n    return numbers[randomNumber];\n}\n// Функція яка генерує рандомне число в діапазоні 0-3 включно\nfunction $a5fd07fa01589658$var$createNumberZeroToThree() {\n    return Math.floor(Math.random() * 4);\n}\n// Функція генерує 2 або 4 на випадковому вільному місці\nfunction $a5fd07fa01589658$var$addNumberToBoard(arr) {\n    if (!arr.flat().includes(0)) return arr;\n     // Перевірка на вільні клітинки\n    let a, b;\n    do {\n        a = $a5fd07fa01589658$var$createNumberZeroToThree();\n        b = $a5fd07fa01589658$var$createNumberZeroToThree();\n    }while (arr[a][b] !== 0);\n    arr[a][b] = $a5fd07fa01589658$var$createNumberTwoOrFour();\n    return arr;\n}\n// Функція яка змінює напис в кнопці та встановлює відповідний EventListener\nfunction $a5fd07fa01589658$var$makeButtonChange(stat) {\n    const button = document.querySelector(\".button\");\n    if (stat === \"playing\") {\n        button.innerHTML = \"Restart\";\n        button.classList.add(\"restart\");\n        button.classList.remove(\"start\");\n        button.removeEventListener(\"click\", $62f2652d1335534a$export$48667d4b7312d89c);\n        button.addEventListener(\"click\", $62f2652d1335534a$export$f140620c2119d747);\n    }\n    if (stat === \"idle\") {\n        button.innerHTML = \"Start\";\n        button.classList.add(\"start\");\n        button.classList.remove(\"restart\");\n        button.removeEventListener(\"click\", $62f2652d1335534a$export$f140620c2119d747);\n        button.addEventListener(\"click\", $62f2652d1335534a$export$48667d4b7312d89c);\n    }\n}\n// Функція перевіряє статус гри\n// та змінює класи на повідомленнях відповідно до статусу\nfunction $a5fd07fa01589658$var$changeMessage(stat) {\n    const messages = [\n        ...document.querySelectorAll(\".message\")\n    ];\n    messages.forEach((item)=>{\n        if (item.classList.contains(`message-${stat}`)) item.classList.remove(\"hidden\");\n        else item.classList.add(\"hidden\");\n        if (stat === \"idle\") {\n            const start = document.querySelector(\".message-start\");\n            start.classList.remove(\"hidden\");\n        }\n    });\n}\n// Функція яка відображає рахунок\nfunction $a5fd07fa01589658$var$updateScore(num) {\n    const count = document.querySelector(\".game-score\");\n    count.innerHTML = num;\n}\n// Перевірка чи є доступні ходи\nfunction $a5fd07fa01589658$var$hasAvailableMoves(board) {\n    for(let i = 0; i < board.length; i++)for(let j = 0; j < board[i].length; j++){\n        // Перевірка сусідніх клітинок (вгору, вниз, ліво, право)\n        if (i > 0 && board[i][j] === board[i - 1][j] || // Вгору\n        i < board.length - 1 && board[i][j] === board[i + 1][j] || // Вниз\n        j > 0 && board[i][j] === board[i][j - 1] || // Ліво\n        j < board[i].length - 1 && board[i][j] === board[i][j + 1] // Право\n        ) return true;\n    }\n    return false;\n}\n// Функція перевірка виграш чи прошраш\nfunction $a5fd07fa01589658$var$checkWinOrLose(board, stat) {\n    const array = board.flat();\n    if (array.includes(2048)) return \"win\";\n    const clearArr = array.filter((item)=>item !== 0);\n    if (clearArr.length === 16 && !$a5fd07fa01589658$var$hasAvailableMoves(board)) return \"lose\";\n    return stat;\n}\n// Функція яка додає EventListener\nlet $a5fd07fa01589658$var$arrowKeyHandler;\nfunction $a5fd07fa01589658$var$addArrowKeyListener(handlerMap) {\n    $a5fd07fa01589658$var$arrowKeyHandler = (e)=>{\n        const handler = handlerMap[e.key];\n        if (handler) handler();\n    };\n    document.addEventListener(\"keyup\", $a5fd07fa01589658$var$arrowKeyHandler);\n}\nfunction $a5fd07fa01589658$var$removeArrowKeyListener() {\n    if ($a5fd07fa01589658$var$arrowKeyHandler) {\n        document.removeEventListener(\"keyup\", $a5fd07fa01589658$var$arrowKeyHandler);\n        $a5fd07fa01589658$var$arrowKeyHandler = null;\n    }\n}\n// Функція ствоерення кольору для клітинок\nfunction $a5fd07fa01589658$var$getColor(value) {\n    if (value === 0) return \"rgb(200, 200, 200)\";\n    const maxColor = [\n        255,\n        0,\n        0\n    ];\n    const baseColor = [\n        255,\n        255,\n        0\n    ];\n    const scale = Math.log2(value) - 1;\n    const factor = Math.min(scale / 10, 1);\n    const color = baseColor.map((c, i)=>{\n        return Math.round(c + (maxColor[i] - c) * factor);\n    });\n    return `rgb(${color[0]}, ${color[1]}, ${color[2]})`;\n}\n$a5fd07fa01589658$exports = $a5fd07fa01589658$var$Game;\n\n\nconst $62f2652d1335534a$var$game = new $a5fd07fa01589658$exports();\nfunction $62f2652d1335534a$export$48667d4b7312d89c() {\n    $62f2652d1335534a$var$handleStartClick($62f2652d1335534a$var$game);\n}\nfunction $62f2652d1335534a$var$handleStartClick(obj) {\n    obj.start();\n}\nfunction $62f2652d1335534a$export$f140620c2119d747() {\n    $62f2652d1335534a$var$handleRestartClick($62f2652d1335534a$var$game);\n}\nfunction $62f2652d1335534a$var$handleRestartClick(obj) {\n    obj.restart();\n}\nfunction $62f2652d1335534a$export$c9afdf4c350fd00e() {\n    $62f2652d1335534a$var$handleRightClick();\n}\nfunction $62f2652d1335534a$var$handleRightClick() {\n    $62f2652d1335534a$var$game.moveRight();\n}\nfunction $62f2652d1335534a$export$4908e9a557fffd35() {\n    $62f2652d1335534a$var$handleLeftClick();\n}\nfunction $62f2652d1335534a$var$handleLeftClick() {\n    $62f2652d1335534a$var$game.moveLeft();\n}\nfunction $62f2652d1335534a$export$40354302e498db6() {\n    $62f2652d1335534a$var$handleUpClick();\n}\nfunction $62f2652d1335534a$var$handleUpClick() {\n    $62f2652d1335534a$var$game.moveUp();\n}\nfunction $62f2652d1335534a$export$c64b5cf39b87cf15() {\n    $62f2652d1335534a$var$handleDownClick();\n}\nfunction $62f2652d1335534a$var$handleDownClick() {\n    $62f2652d1335534a$var$game.moveDown();\n}\nconst $62f2652d1335534a$export$3b6871b1da9207c5 = {\n    ArrowRight: $62f2652d1335534a$export$c9afdf4c350fd00e,\n    ArrowLeft: $62f2652d1335534a$export$4908e9a557fffd35,\n    ArrowUp: $62f2652d1335534a$export$40354302e498db6,\n    ArrowDown: $62f2652d1335534a$export$c64b5cf39b87cf15\n};\n\n\n\"use strict\";\nconst $09e991522ca7e64e$var$start = document.querySelector(\".start\");\n$09e991522ca7e64e$var$start.addEventListener(\"click\", $62f2652d1335534a$export$48667d4b7312d89c);\n\n\n//# sourceMappingURL=index.de4f1f1a.js.map\n","'use strict';\nimport * as Handlers from '../modules/functions';\n\nconst start = document.querySelector('.start');\n\nstart.addEventListener('click', Handlers.handleStartClickWrapper);\n","const Game = require('./Game.class');\nconst game = new Game();\n\nexport function handleStartClickWrapper() {\n  handleStartClick(game);\n}\n\nfunction handleStartClick(obj) {\n  obj.start();\n}\n\nexport function handleRestartClickWrapper() {\n  handleRestartClick(game);\n}\n\nfunction handleRestartClick(obj) {\n  obj.restart();\n}\n\nexport function handleRightClickWrapper() {\n  handleRightClick();\n}\n\nfunction handleRightClick() {\n  game.moveRight();\n}\n\nexport function handleLeftClickWrapper() {\n  handleLeftClick();\n}\n\nfunction handleLeftClick() {\n  game.moveLeft();\n}\n\nexport function handleUpClickWrapper() {\n  handleUpClick();\n}\n\nfunction handleUpClick() {\n  game.moveUp();\n}\n\nexport function handleDownClickWrapper() {\n  handleDownClick();\n}\n\nfunction handleDownClick() {\n  game.moveDown();\n}\n\nexport const arrowHandlers = {\n  ArrowRight: handleRightClickWrapper,\n  ArrowLeft: handleLeftClickWrapper,\n  ArrowUp: handleUpClickWrapper,\n  ArrowDown: handleDownClickWrapper,\n};\n","'use strict';\nimport * as Handlers from './functions';\n\nclass Game {\n  constructor(initialState) {\n    this.board = initialState || [\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n    ];\n\n    this.score = 0;\n    this.status = 'idle';\n  }\n\n  moveLeft() {\n    for (let i = 0; i < this.board.length; i++) {\n      const container = [];\n\n      // Збираємо всі ненульові елементи в контейнер\n      for (let j = 0; j < this.board[i].length; j++) {\n        if (this.board[i][j] !== 0) {\n          container.push(this.board[i][j]);\n        }\n      }\n\n      // Об'єднуємо однакові елементи\n      for (let k = container.length - 1; k > 0; k--) {\n        if (container[k] === container[k - 1]) {\n          container[k] *= 2; // Об'єднуємо елементи\n          container[k - 1] = 0; // Обнуляємо елемент, що об'єднався\n        }\n      }\n\n      // Забираємо нулі з сонтейнера\n      const filteredContainer = container.filter((item) => item !== 0);\n\n      while (filteredContainer.length < this.board[i].length) {\n        filteredContainer.push(0); // Додаємо нулі зліва\n      }\n      this.board[i] = filteredContainer; // Записуємо результат в масив\n    }\n    this.board = addNumberToBoard(this.board);\n    this.updateBoard();\n  }\n\n  moveRight() {\n    for (let i = 0; i < this.board.length; i++) {\n      const container = [];\n\n      // Збираємо всі ненульові елементи в контейнер\n      for (let j = 0; j < this.board[i].length; j++) {\n        if (this.board[i][j] !== 0) {\n          container.push(this.board[i][j]);\n        }\n      }\n\n      // Об'єднуємо однакові елементи\n      for (let k = 0; k < container.length - 1; k++) {\n        if (container[k] === container[k + 1]) {\n          container[k + 1] *= 2; // Об'єднуємо елементи\n          container[k] = 0; // Обнуляємо елемент, що об'єднався\n          k++;\n        }\n      }\n\n      // Забираємо нулі з сонтейнера\n      const filteredContainer = container.filter((item) => item !== 0);\n\n      while (filteredContainer.length < this.board[i].length) {\n        filteredContainer.unshift(0); // Додаємо нулі зліва\n      }\n      this.board[i] = filteredContainer; // Записуємо результат в масив\n    }\n    this.board = addNumberToBoard(this.board);\n    this.updateBoard();\n  }\n\n  moveUp() {\n    for (let i = 0; i < this.board[0].length; i++) {\n      const container = [];\n\n      // Зберігаємо всі елементи поточного стовпця, ігноруючи нулі\n      for (let j = 0; j < this.board.length; j++) {\n        if (this.board[j][i] !== 0) {\n          container.push(this.board[j][i]);\n        }\n      }\n\n      // Виконати злиття елементів у стовпці\n      for (let k = 0; k < container.length - 1; k++) {\n        if (container[k] === container[k + 1]) {\n          container[k] *= 2;\n          container[k + 1] = 0;\n          k++;\n        }\n      }\n\n      // Фільтруємо масив від нулів і додаємо їх в кінець\n      const filteredContainer = container.filter((item) => item !== 0);\n\n      // Додаємо нулі в кінець контейнера, якщо їх не вистачає\n      while (filteredContainer.length < this.board.length) {\n        filteredContainer.push(0);\n      }\n\n      // Записуємо результат в кожен стовпець масиву result\n      for (let k = 0; k < filteredContainer.length; k++) {\n        this.board[k][i] = filteredContainer[k];\n      }\n    }\n    this.board = addNumberToBoard(this.board);\n    this.updateBoard();\n  }\n\n  moveDown() {\n    for (let i = 0; i < this.board[0].length; i++) {\n      const container = [];\n\n      // Зберігаємо всі елементи поточного стовпця, ігноруючи нулі\n      for (let j = 0; j < this.board.length; j++) {\n        if (this.board[j][i] !== 0) {\n          container.push(this.board[j][i]);\n        }\n      }\n\n      // Виконати злиття елементів у стовпці\n      for (let k = 0; k < container.length - 1; k++) {\n        if (container[k] === container[k + 1]) {\n          container[k] *= 2;\n          container[k + 1] = 0;\n          k++;\n        }\n      }\n\n      // Фільтруємо масив від нулів і додаємо їх в кінець\n      const filteredContainer = container.filter((item) => item !== 0);\n\n      // Додаємо нулі в кінець контейнера, якщо їх не вистачає\n      while (filteredContainer.length < this.board.length) {\n        filteredContainer.unshift(0);\n      }\n\n      // Записуємо результат в кожен стовпець масиву result\n      for (let k = 0; k < filteredContainer.length; k++) {\n        this.board[k][i] = filteredContainer[k];\n      }\n    }\n    this.board = addNumberToBoard(this.board);\n    this.updateBoard();\n  }\n\n  getScore() {\n    const countScrore = (arr) => {\n      return arr.reduce((sum, item) => {\n        return sum + item.reduce((acc, current) => acc + current, 0);\n      }, 0);\n    };\n\n    this.score = countScrore(this.board);\n    updateScore(this.score);\n  }\n\n  getState() {\n    if (this.status !== 'playing') {\n      removeArrowKeyListener(Handlers.arrowHandlers);\n    }\n\n    if (this.start === 'playing') {\n      addArrowKeyListener(Handlers.arrowHandlers);\n    }\n  }\n\n  start() {\n    this.status = 'playing';\n    this.board = addNumberToBoard(this.board);\n    addArrowKeyListener(Handlers.arrowHandlers);\n\n    makeButtonChange(this.status);\n    this.updateBoard();\n  }\n\n  restart() {\n    this.board = [\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n    ];\n\n    this.score = 0;\n    this.status = 'idle';\n    makeButtonChange(this.status);\n    this.updateBoard();\n  }\n\n  updateBoard() {\n    // Отримуємо всі клітинки\n    const cells = [...document.querySelectorAll('.field-cell')];\n    const cellsArr = sliceArr(cells);\n\n    // Заповнюємо клітинки данними з дошки\n    for (let i = 0; i < this.board.length; i++) {\n      for (let j = 0; j < this.board[i].length; j++) {\n        if (this.board[i][j] !== 0) {\n          cellsArr[i][j].innerText = this.board[i][j];\n        } else {\n          cellsArr[i][j].innerText = '';\n        }\n        cellsArr[i][j].style.backgroundColor = getColor(this.board[i][j]);\n      }\n    }\n\n    this.getScore();\n    this.status = checkWinOrLose(this.board, this.status);\n    changeMessage(this.status);\n    this.getState();\n  }\n}\n\n// Функція перетворення одновимірного масиву на масив 4х4\nfunction sliceArr(arr) {\n  const contaienr = [];\n\n  for (let i = 0; i < arr.length; i = i + 4) {\n    contaienr.push(arr.slice(i, i + 4));\n  }\n\n  return contaienr;\n}\n\n// Функція яка генерує рандомне число 2 або 4\nfunction createNumberTwoOrFour(arr) {\n  const numbers = [2, 2, 2, 2, 2, 4, 2, 2, 2, 2];\n  const randomNumber = Math.floor(Math.random() * (9 + 1));\n\n  return numbers[randomNumber];\n}\n\n// Функція яка генерує рандомне число в діапазоні 0-3 включно\n\nfunction createNumberZeroToThree() {\n  return Math.floor(Math.random() * (3 + 1));\n}\n\n// Функція генерує 2 або 4 на випадковому вільному місці\n\nfunction addNumberToBoard(arr) {\n  if (!arr.flat().includes(0)) {\n    return arr;\n  } // Перевірка на вільні клітинки\n\n  let a, b;\n\n  do {\n    a = createNumberZeroToThree();\n    b = createNumberZeroToThree();\n  } while (arr[a][b] !== 0);\n\n  arr[a][b] = createNumberTwoOrFour();\n\n  return arr;\n}\n\n// Функція яка змінює напис в кнопці та встановлює відповідний EventListener\nfunction makeButtonChange(stat) {\n  const button = document.querySelector('.button');\n\n  if (stat === 'playing') {\n    button.innerHTML = 'Restart';\n    button.classList.add('restart');\n    button.classList.remove('start');\n\n    button.removeEventListener('click', Handlers.handleStartClickWrapper);\n    button.addEventListener('click', Handlers.handleRestartClickWrapper);\n  }\n\n  if (stat === 'idle') {\n    button.innerHTML = 'Start';\n    button.classList.add('start');\n    button.classList.remove('restart');\n\n    button.removeEventListener('click', Handlers.handleRestartClickWrapper);\n    button.addEventListener('click', Handlers.handleStartClickWrapper);\n  }\n}\n\n// Функція перевіряє статус гри\n// та змінює класи на повідомленнях відповідно до статусу\nfunction changeMessage(stat) {\n  const messages = [...document.querySelectorAll('.message')];\n\n  messages.forEach((item) => {\n    if (item.classList.contains(`message-${stat}`)) {\n      item.classList.remove('hidden');\n    } else {\n      item.classList.add('hidden');\n    }\n\n    if (stat === 'idle') {\n      const start = document.querySelector('.message-start');\n\n      start.classList.remove('hidden');\n    }\n  });\n}\n\n// Функція яка відображає рахунок\nfunction updateScore(num) {\n  const count = document.querySelector('.game-score');\n\n  count.innerHTML = num;\n}\n\n// Перевірка чи є доступні ходи\nfunction hasAvailableMoves(board) {\n  for (let i = 0; i < board.length; i++) {\n    for (let j = 0; j < board[i].length; j++) {\n      // Перевірка сусідніх клітинок (вгору, вниз, ліво, право)\n      if (\n        (i > 0 && board[i][j] === board[i - 1][j]) || // Вгору\n        (i < board.length - 1 && board[i][j] === board[i + 1][j]) || // Вниз\n        (j > 0 && board[i][j] === board[i][j - 1]) || // Ліво\n        (j < board[i].length - 1 && board[i][j] === board[i][j + 1]) // Право\n      ) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n}\n\n// Функція перевірка виграш чи прошраш\nfunction checkWinOrLose(board, stat) {\n  const array = board.flat();\n\n  if (array.includes(2048)) {\n    return 'win';\n  }\n\n  const clearArr = array.filter((item) => item !== 0);\n\n  if (clearArr.length === 16 && !hasAvailableMoves(board)) {\n    return 'lose';\n  }\n\n  return stat;\n}\n\n// Функція яка додає EventListener\nlet arrowKeyHandler;\n\nfunction addArrowKeyListener(handlerMap) {\n  arrowKeyHandler = (e) => {\n    const handler = handlerMap[e.key];\n\n    if (handler) {\n      handler();\n    }\n  };\n\n  document.addEventListener('keyup', arrowKeyHandler);\n}\n\nfunction removeArrowKeyListener() {\n  if (arrowKeyHandler) {\n    document.removeEventListener('keyup', arrowKeyHandler);\n    arrowKeyHandler = null;\n  }\n}\n\n// Функція ствоерення кольору для клітинок\nfunction getColor(value) {\n  if (value === 0) {\n    return 'rgb(200, 200, 200)';\n  }\n\n  const maxColor = [255, 0, 0];\n  const baseColor = [255, 255, 0];\n  const scale = Math.log2(value) - 1;\n  const factor = Math.min(scale / 10, 1);\n\n  const color = baseColor.map((c, i) => {\n    return Math.round(c + (maxColor[i] - c) * factor);\n  });\n\n  return `rgb(${color[0]}, ${color[1]}, ${color[2]})`;\n}\nmodule.exports = Game;\n"],"names":["$a5fd07fa01589658$var$arrowKeyHandler","$a5fd07fa01589658$var$createNumberZeroToThree","Math","floor","random","$a5fd07fa01589658$var$addNumberToBoard","arr","a","b","flat","includes","numbers","$a5fd07fa01589658$var$makeButtonChange","stat","button","document","querySelector","innerHTML","classList","add","remove","removeEventListener","$62f2652d1335534a$export$48667d4b7312d89c","addEventListener","$62f2652d1335534a$export$f140620c2119d747","$a5fd07fa01589658$var$addArrowKeyListener","handlerMap","e","handler","key","$62f2652d1335534a$var$game","constructor","initialState","board","score","status","moveLeft","i","length","container","j","push","k","filteredContainer","filter","item","updateBoard","moveRight","unshift","moveUp","moveDown","getScore","num","reduce","sum","acc","current","count","getState","start","$62f2652d1335534a$export$3b6871b1da9207c5","restart","cellsArr","$a5fd07fa01589658$var$sliceArr","contaienr","slice","querySelectorAll","innerText","style","backgroundColor","$a5fd07fa01589658$var$getColor","value","maxColor","factor","min","scale","log2","color","baseColor","map","c","round","$a5fd07fa01589658$var$checkWinOrLose","array","clearArr","$a5fd07fa01589658$var$hasAvailableMoves","messages","forEach","contains","$62f2652d1335534a$var$handleStartClick","obj","$62f2652d1335534a$var$handleRestartClick","ArrowRight","ArrowLeft","ArrowUp","ArrowDown","$09e991522ca7e64e$var$start"],"version":3,"file":"index.de4f1f1a.js.map"}